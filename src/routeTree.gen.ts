/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as StudyIndexImport } from './routes/study/index'
import { Route as LibraryIndexImport } from './routes/library/index'
import { Route as CathedraIndexImport } from './routes/cathedra/index'
import { Route as StudySlugImport } from './routes/study/$slug'
import { Route as CathedraHistoryImport } from './routes/cathedra/history'
import { Route as CathedraGreetingImport } from './routes/cathedra/greeting'
import { Route as CathedraEmployeesIndexImport } from './routes/cathedra/employees/index'
import { Route as CathedraEmployeesSlugImport } from './routes/cathedra/employees/$slug'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StudyIndexRoute = StudyIndexImport.update({
  path: '/study/',
  getParentRoute: () => rootRoute,
} as any)

const LibraryIndexRoute = LibraryIndexImport.update({
  path: '/library/',
  getParentRoute: () => rootRoute,
} as any)

const CathedraIndexRoute = CathedraIndexImport.update({
  path: '/cathedra/',
  getParentRoute: () => rootRoute,
} as any)

const StudySlugRoute = StudySlugImport.update({
  path: '/study/$slug',
  getParentRoute: () => rootRoute,
} as any)

const CathedraHistoryRoute = CathedraHistoryImport.update({
  path: '/cathedra/history',
  getParentRoute: () => rootRoute,
} as any)

const CathedraGreetingRoute = CathedraGreetingImport.update({
  path: '/cathedra/greeting',
  getParentRoute: () => rootRoute,
} as any)

const CathedraEmployeesIndexRoute = CathedraEmployeesIndexImport.update({
  path: '/cathedra/employees/',
  getParentRoute: () => rootRoute,
} as any)

const CathedraEmployeesSlugRoute = CathedraEmployeesSlugImport.update({
  path: '/cathedra/employees/$slug',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/cathedra/greeting': {
      preLoaderRoute: typeof CathedraGreetingImport
      parentRoute: typeof rootRoute
    }
    '/cathedra/history': {
      preLoaderRoute: typeof CathedraHistoryImport
      parentRoute: typeof rootRoute
    }
    '/study/$slug': {
      preLoaderRoute: typeof StudySlugImport
      parentRoute: typeof rootRoute
    }
    '/cathedra/': {
      preLoaderRoute: typeof CathedraIndexImport
      parentRoute: typeof rootRoute
    }
    '/library/': {
      preLoaderRoute: typeof LibraryIndexImport
      parentRoute: typeof rootRoute
    }
    '/study/': {
      preLoaderRoute: typeof StudyIndexImport
      parentRoute: typeof rootRoute
    }
    '/cathedra/employees/$slug': {
      preLoaderRoute: typeof CathedraEmployeesSlugImport
      parentRoute: typeof rootRoute
    }
    '/cathedra/employees/': {
      preLoaderRoute: typeof CathedraEmployeesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  CathedraGreetingRoute,
  CathedraHistoryRoute,
  StudySlugRoute,
  CathedraIndexRoute,
  LibraryIndexRoute,
  StudyIndexRoute,
  CathedraEmployeesSlugRoute,
  CathedraEmployeesIndexRoute,
])

/* prettier-ignore-end */
